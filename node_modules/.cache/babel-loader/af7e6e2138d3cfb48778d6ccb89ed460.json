{"ast":null,"code":"// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nimport { DELETE_EXPENSE, GET_CURRENCIES, SEND_EXPENSES } from '../actions';\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: []\n};\nexport function currencies(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case GET_CURRENCIES:\n      return { ...state,\n        currencies: Object.keys(action.currencies).filter(currency => currency !== 'USDT')\n      };\n\n    case SEND_EXPENSES:\n      return { ...state,\n        expenses: [...state.expenses, Object.assign(action.expense, action.exchangeRates)]\n      };\n\n    case DELETE_EXPENSE:\n      return { ...state,\n        expenses: [...state.expenses.filter(expense => expense.id !== action.id)]\n      };\n\n    default:\n      return state;\n  }\n}\nexport default currencies;","map":{"version":3,"sources":["/home/henrique/Documentos/henrique/Projects/Projetos/sd-013-b-project-trybewallet/src/reducers/wallet.js"],"names":["DELETE_EXPENSE","GET_CURRENCIES","SEND_EXPENSES","INITIAL_STATE","currencies","expenses","state","action","type","Object","keys","filter","currency","assign","expense","exchangeRates","id"],"mappings":"AAAA;AACA,SAASA,cAAT,EAAyBC,cAAzB,EAAyCC,aAAzC,QAA8D,YAA9D;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,UAAU,EAAE,EADQ;AAEpBC,EAAAA,QAAQ,EAAE;AAFU,CAAtB;AAKA,OAAO,SAASD,UAAT,CAAoBE,KAAK,GAAGH,aAA5B,EAA2CI,MAA3C,EAAmD;AACxD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKP,cAAL;AACE,aAAO,EAAE,GAAGK,KAAL;AACLF,QAAAA,UAAU,EAAEK,MAAM,CAACC,IAAP,CAAYH,MAAM,CAACH,UAAnB,EACTO,MADS,CACDC,QAAD,IAAcA,QAAQ,KAAK,MADzB;AADP,OAAP;;AAIF,SAAKV,aAAL;AACE,aAAO,EAAE,GAAGI,KAAL;AACLD,QAAAA,QAAQ,EAAE,CAAC,GAAGC,KAAK,CAACD,QAAV,EACRI,MAAM,CAACI,MAAP,CAAcN,MAAM,CAACO,OAArB,EAA8BP,MAAM,CAACQ,aAArC,CADQ;AADL,OAAP;;AAGF,SAAKf,cAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AACLD,QAAAA,QAAQ,EAAE,CAAC,GAAGC,KAAK,CAACD,QAAN,CACXM,MADW,CACHG,OAAD,IAAaA,OAAO,CAACE,EAAR,KAAeT,MAAM,CAACS,EAD/B,CAAJ;AADL,OAAP;;AAGF;AACE,aAAOV,KAAP;AAfF;AAiBD;AAED,eAAeF,UAAf","sourcesContent":["// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nimport { DELETE_EXPENSE, GET_CURRENCIES, SEND_EXPENSES } from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n};\n\nexport function currencies(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case GET_CURRENCIES:\n    return { ...state,\n      currencies: Object.keys(action.currencies)\n        .filter((currency) => currency !== 'USDT'),\n    };\n  case SEND_EXPENSES:\n    return { ...state,\n      expenses: [...state.expenses,\n        Object.assign(action.expense, action.exchangeRates)] };\n  case DELETE_EXPENSE:\n    return { ...state,\n      expenses: [...state.expenses\n        .filter((expense) => expense.id !== action.id)] };\n  default:\n    return state;\n  }\n}\n\nexport default currencies;\n"]},"metadata":{},"sourceType":"module"}