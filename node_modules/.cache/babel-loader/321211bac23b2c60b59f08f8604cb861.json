{"ast":null,"code":"var _jsxFileName = \"/home/henrique/Documentos/henrique/Projects/Projetos/sd-013-b-project-trybewallet/src/pages/Wallet.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport AddExpense from '../components/AddExpense';\nimport ExpenseTable from '../components/ExpenseTable';\n\nclass Wallet extends React.Component {\n  render() {\n    const {\n      email,\n      expenses\n    } = this.props;\n    const convertedValue = expenses.map(expense => expense.value * expense.exchangeRates[expense.currency].ask);\n    console.log(convertedValue);\n    let total = 0;\n\n    if (convertedValue.length === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"header\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        \"data-testid\": \"email-field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      }, email), /*#__PURE__*/React.createElement(\"p\", {\n        \"data-testid\": \"total-field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }\n      }, total, ' ', /*#__PURE__*/React.createElement(\"span\", {\n        \"data-testid\": \"header-currency-field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }\n      }, \"BRL\"), ' ')), /*#__PURE__*/React.createElement(AddExpense, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    total = convertedValue.reduce((acc, curr) => acc + curr).toFixed(2);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"email-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, email), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"total-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, total, /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"header-currency-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, \"BRL\"))), /*#__PURE__*/React.createElement(AddExpense, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ExpenseTable, {\n      expenses: expenses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nWallet.propTypes = {\n  email: PropTypes.string.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired\n};\n\nconst mapStateToProps = ({\n  user: {\n    email\n  },\n  wallet: {\n    expenses\n  }\n}) => ({\n  email,\n  expenses\n});\n\nexport default connect(mapStateToProps, null)(Wallet);","map":{"version":3,"sources":["/home/henrique/Documentos/henrique/Projects/Projetos/sd-013-b-project-trybewallet/src/pages/Wallet.js"],"names":["React","connect","PropTypes","AddExpense","ExpenseTable","Wallet","Component","render","email","expenses","props","convertedValue","map","expense","value","exchangeRates","currency","ask","console","log","total","length","reduce","acc","curr","toFixed","propTypes","string","isRequired","arrayOf","object","mapStateToProps","user","wallet"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AAEA,MAAMC,MAAN,SAAqBL,KAAK,CAACM,SAA3B,CAAqC;AACnCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsB,KAAKC,KAAjC;AACA,UAAMC,cAAc,GAAGF,QAAQ,CAACG,GAAT,CACpBC,OAAD,IAAaA,OAAO,CAACC,KAAR,GAAgBD,OAAO,CAACE,aAAR,CAAsBF,OAAO,CAACG,QAA9B,EAAwCC,GADhD,CAAvB;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,cAAZ;AACA,QAAIS,KAAK,GAAG,CAAZ;;AACA,QAAIT,cAAc,CAACU,MAAf,KAA0B,CAA9B,EAAiC;AAC/B,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,uBAAY,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+Bb,KAA/B,CADF,eAEE;AAAG,uBAAY,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIY,KADJ,EAEG,GAFH,eAGE;AAAM,uBAAY,uBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,EAIG,GAJH,CAFF,CADF,eAUE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CADF;AAcD;;AAACA,IAAAA,KAAK,GAAGT,cAAc,CAACW,MAAf,CAAsB,CAACC,GAAD,EAAMC,IAAN,KAAeD,GAAG,GAAGC,IAA3C,EAAiDC,OAAjD,CAAyD,CAAzD,CAAR;AACF,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,qBAAY,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BjB,KAA/B,CADF,eAEE;AAAG,qBAAY,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIY,KADJ,eAEE;AAAM,qBAAY,uBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CAFF,CADF,eAQE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,eASE,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAGX,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF;AAaD;;AArCkC;;AAwCrCJ,MAAM,CAACqB,SAAP,GAAmB;AACjBlB,EAAAA,KAAK,EAAEN,SAAS,CAACyB,MAAV,CAAiBC,UADP;AAEjBnB,EAAAA,QAAQ,EAAEP,SAAS,CAAC2B,OAAV,CAAkB3B,SAAS,CAAC4B,MAAV,CAAiBF,UAAnC,EAA+CA;AAFxC,CAAnB;;AAKA,MAAMG,eAAe,GAAG,CAAC;AACvBC,EAAAA,IAAI,EAAE;AAAExB,IAAAA;AAAF,GADiB;AAEvByB,EAAAA,MAAM,EAAE;AAAExB,IAAAA;AAAF;AAFe,CAAD,MAGjB;AAAED,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAHiB,CAAxB;;AAKA,eAAeR,OAAO,CAAC8B,eAAD,EAAkB,IAAlB,CAAP,CAA+B1B,MAA/B,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport AddExpense from '../components/AddExpense';\nimport ExpenseTable from '../components/ExpenseTable';\n\nclass Wallet extends React.Component {\n  render() {\n    const { email, expenses } = this.props;\n    const convertedValue = expenses.map(\n      (expense) => expense.value * expense.exchangeRates[expense.currency].ask,\n    );\n    console.log(convertedValue);\n    let total = 0;\n    if (convertedValue.length === 0) {\n      return (\n        <div>\n          <header>\n            <p data-testid=\"email-field\">{ email }</p>\n            <p data-testid=\"total-field\">\n              { total }\n              {' '}\n              <span data-testid=\"header-currency-field\">BRL</span>\n              {' '}\n            </p>\n          </header>\n          <AddExpense />\n        </div>\n      );\n    } total = convertedValue.reduce((acc, curr) => acc + curr).toFixed(2);\n    return (\n      <div>\n        <header>\n          <p data-testid=\"email-field\">{ email }</p>\n          <p data-testid=\"total-field\">\n            { total }\n            <span data-testid=\"header-currency-field\">BRL</span>\n          </p>\n        </header>\n        <AddExpense />\n        <ExpenseTable expenses={ expenses } />\n      </div>\n    );\n  }\n}\n\nWallet.propTypes = {\n  email: PropTypes.string.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n};\n\nconst mapStateToProps = ({\n  user: { email },\n  wallet: { expenses },\n}) => ({ email, expenses });\n\nexport default connect(mapStateToProps, null)(Wallet);\n"]},"metadata":{},"sourceType":"module"}