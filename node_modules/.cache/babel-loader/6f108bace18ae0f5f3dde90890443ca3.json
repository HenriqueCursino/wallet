{"ast":null,"code":"var _jsxFileName = \"/home/henrique/Documentos/henrique/Projects/Projetos/sd-013-b-project-trybewallet/src/components/AddExpense.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getCurrenciesThunk, setExpenseThunk } from '../actions';\nimport SelectInput from './SelectInput';\nconst paymentOptions = ['', 'Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\nconst tagOptions = ['', 'Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n\nclass AddExpense extends Component {\n  constructor() {\n    super();\n    this.state = {\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação'\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      getCurrencies\n    } = this.props;\n    getCurrencies();\n  }\n\n  handleChange({\n    target: {\n      value,\n      name\n    }\n  }) {\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleClick() {\n    const {\n      setExpense,\n      expenses\n    } = this.props;\n    const {\n      value,\n      description,\n      currency,\n      method,\n      tag\n    } = this.state;\n    const expense = {\n      id: expenses.length,\n      value,\n      description,\n      currency,\n      method,\n      tag\n    };\n    setExpense(expense);\n  }\n\n  render() {\n    const {\n      currencies = []\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      action: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"Valor\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"value\",\n      type: \"text\",\n      id: \"value\",\n      autoComplete: \"off\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, \"Descri\\xE7\\xE3o\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"description\",\n      name: \"description\",\n      autoComplete: \"off\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(SelectInput, {\n      label: \"Moeda\",\n      inputValue: \"currency\",\n      optionsArray: currencies,\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(SelectInput, {\n      label: \"M\\xE9todo de pagamento\",\n      inputValue: \"method\",\n      optionsArray: paymentOptions,\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(SelectInput, {\n      label: \"Tag\",\n      inputValue: \"tag\",\n      optionsArray: tagOptions,\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, \"Adicionar despesa\"));\n  }\n\n}\n\nAddExpense.propTypes = {\n  getCurrencies: PropTypes.func.isRequired,\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setExpense: PropTypes.func.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nconst mapStateToProps = ({\n  wallet: {\n    currencies,\n    expenses\n  }\n}) => ({\n  currencies,\n  expenses\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrencies: () => dispatch(getCurrenciesThunk()),\n  setExpense: expense => dispatch(setExpenseThunk(expense))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddExpense);","map":{"version":3,"sources":["/home/henrique/Documentos/henrique/Projects/Projetos/sd-013-b-project-trybewallet/src/components/AddExpense.js"],"names":["React","Component","connect","PropTypes","getCurrenciesThunk","setExpenseThunk","SelectInput","paymentOptions","tagOptions","AddExpense","constructor","state","value","description","currency","method","tag","handleChange","bind","handleClick","componentDidMount","getCurrencies","props","target","name","setState","setExpense","expenses","expense","id","length","render","currencies","propTypes","func","isRequired","arrayOf","string","object","mapStateToProps","wallet","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { getCurrenciesThunk, setExpenseThunk } from '../actions';\n\nimport SelectInput from './SelectInput';\n\nconst paymentOptions = ['', 'Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\n\nconst tagOptions = ['', 'Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n\nclass AddExpense extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    const { getCurrencies } = this.props;\n    getCurrencies();\n  }\n\n  handleChange({ target: { value, name } }) {\n    this.setState({ [name]: value });\n  }\n\n  handleClick() {\n    const { setExpense, expenses } = this.props;\n    const { value, description, currency, method, tag } = this.state;\n    const expense = {\n      id: expenses.length,\n      value,\n      description,\n      currency,\n      method,\n      tag,\n    };\n    setExpense(expense);\n  }\n\n  render() {\n    const { currencies = [] } = this.props;\n    return (\n      <form action=\"\">\n        <label htmlFor=\"value\">\n          Valor\n          <input\n            name=\"value\"\n            type=\"text\"\n            id=\"value\"\n            autoComplete=\"off\"\n            onChange={ this.handleChange }\n          />\n        </label>\n        <label htmlFor=\"description\">\n          Descrição\n          <input\n            type=\"text\"\n            id=\"description\"\n            name=\"description\"\n            autoComplete=\"off\"\n            onChange={ this.handleChange }\n          />\n        </label>\n        <SelectInput\n          label=\"Moeda\"\n          inputValue=\"currency\"\n          optionsArray={ currencies }\n          handleChange={ this.handleChange }\n        />\n        <SelectInput\n          label=\"Método de pagamento\"\n          inputValue=\"method\"\n          optionsArray={ paymentOptions }\n          handleChange={ this.handleChange }\n        />\n        <SelectInput\n          label=\"Tag\"\n          inputValue=\"tag\"\n          optionsArray={ tagOptions }\n          handleChange={ this.handleChange }\n        />\n        <button type=\"button\" onClick={ this.handleClick }>Adicionar despesa</button>\n      </form>\n    );\n  }\n}\n\nAddExpense.propTypes = {\n  getCurrencies: PropTypes.func.isRequired,\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setExpense: PropTypes.func.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nconst mapStateToProps = ({ wallet: { currencies, expenses } }) => ({\n  currencies,\n  expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrencies: () => dispatch(getCurrenciesThunk()),\n  setExpense: (expense) => dispatch(setExpenseThunk(expense)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddExpense);\n"]},"metadata":{},"sourceType":"module"}