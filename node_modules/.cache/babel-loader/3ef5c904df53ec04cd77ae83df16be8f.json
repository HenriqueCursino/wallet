{"ast":null,"code":"var _jsxFileName = \"/home/henrique/Documentos/henrique/Projects/Projetos/sd-013-b-project-trybewallet/src/components/ExpenseTable.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './table.css';\nimport { connect } from 'react-redux';\nimport { deleteExpense as deleteExpe } from '../actions';\n\nclass ExpenseTable extends Component {\n  render() {\n    const {\n      expenses,\n      deleteExpense\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"table\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, \"Descri\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, \"Tag\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, \"M\\xE9todo de pagamento\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, \"Valor\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, \"Moeda\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, \"C\\xE2mbio utilizado\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, \"Valor convertido\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, \"Moeda de convers\\xE3o\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, \"Editar/Excluir\")), expenses.map(expense => /*#__PURE__*/React.createElement(\"tr\", {\n      key: expense.id,\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }\n    }, expense.description), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }\n    }, expense.tag), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }\n    }, expense.method), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    }, expense.value), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, Number(expense.exchangeRates[expense.currency].ask).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }, expense.exchangeRates[expense.currency].name.split('/')[0] === 'Dólar Americano' ? 'Dólar Comercial' : expense.exchangeRates[expense.currency].name.split('/')[0]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }, Number(expense.exchangeRates[expense.currency].ask * Number(expense.value)).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, \"Real\"), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"delete-btn\",\n      type: \"button\",\n      onClick: () => deleteExpense(expense.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, \"Exluir\")))));\n  }\n\n}\n\nExpenseTable.propTypes = {\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  deleteExpense: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  deleteExpense: id => dispatch(deleteExpe(id))\n});\n\nexport default connect(null, mapDispatchToProps)(ExpenseTable);","map":{"version":3,"sources":["/home/henrique/Documentos/henrique/Projects/Projetos/sd-013-b-project-trybewallet/src/components/ExpenseTable.jsx"],"names":["React","Component","PropTypes","connect","deleteExpense","deleteExpe","ExpenseTable","render","expenses","props","map","expense","id","description","tag","method","value","Number","exchangeRates","currency","ask","toFixed","name","split","propTypes","arrayOf","object","isRequired","func","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './table.css';\nimport { connect } from 'react-redux';\nimport { deleteExpense as deleteExpe } from '../actions';\n\nclass ExpenseTable extends Component {\n  render() {\n    const { expenses, deleteExpense } = this.props;\n    return (\n      <table className=\"container\">\n        <tbody>\n          <tr className=\"table\">\n            <th>Descrição</th>\n            <th>Tag</th>\n            <th>Método de pagamento</th>\n            <th>Valor</th>\n            <th>Moeda</th>\n            <th>Câmbio utilizado</th>\n            <th>Valor convertido</th>\n            <th>Moeda de conversão</th>\n            <th>Editar/Excluir</th>\n          </tr>\n          {expenses.map((expense) => (\n            <tr key={ expense.id } className=\"table\">\n              <td>{expense.description}</td>\n              <td>{expense.tag}</td>\n              <td>{expense.method}</td>\n              <td>{expense.value}</td>\n              <td>{Number(expense.exchangeRates[expense.currency].ask).toFixed(2)}</td>\n              <td>\n                {expense.exchangeRates[expense.currency]\n                  .name.split('/')[0] === 'Dólar Americano'\n                  ? 'Dólar Comercial' : expense.exchangeRates[expense.currency]\n                    .name.split('/')[0]}\n              </td>\n              <td>\n                {\n                  Number(expense.exchangeRates[expense.currency]\n                    .ask * Number(expense.value))\n                    .toFixed(2)\n                }\n              </td>\n              <td>Real</td>\n              <button\n                data-testid=\"delete-btn\"\n                type=\"button\"\n                onClick={ () => deleteExpense(expense.id) }\n              >\n                Exluir\n              </button>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nExpenseTable.propTypes = {\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  deleteExpense: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteExpense: (id) => dispatch(deleteExpe(id)),\n});\n\nexport default connect(null, mapDispatchToProps)(ExpenseTable);\n"]},"metadata":{},"sourceType":"module"}