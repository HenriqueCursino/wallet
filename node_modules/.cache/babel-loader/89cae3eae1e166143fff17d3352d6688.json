{"ast":null,"code":"var _jsxFileName = \"/home/usuario/Projects/Projetos/sd-013-b-project-trybewallet/src/components/AddExpense.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getCurrenciesThunk } from '../actions';\n\nclass AddExpense extends Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedCurrency: 'USD'\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      getCurrencies\n    } = this.props;\n    getCurrencies();\n  }\n\n  handleChange({\n    target: {\n      value\n    }\n  }) {\n    this.setState({\n      selectedCurrency: value\n    });\n  }\n\n  render() {\n    const {\n      currencies = []\n    } = this.props;\n    const {\n      selectedCurrency\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      action: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, \"Valor\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"value-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, \"Descri\\xE7\\xE3o\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"description-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, \"Moeda\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"currency\",\n      id: \"currency\",\n      value: selectedCurrency,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, currencies.map(currency => /*#__PURE__*/React.createElement(\"option\", {\n      key: currency,\n      value: currency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }, currency)))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"payment-method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"M\\xE9todo de pagamento\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"paymentMethod\",\n      id: \"payment-method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"money\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"credit-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"debit-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\"))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"Tag\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"tag\",\n      id: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"food\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"recreation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"work\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"transportation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"healthcare\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, \"Sa\\xFAde\"))));\n  }\n\n}\n\nAddExpense.propTypes = {\n  getCurrencies: PropTypes.func.isRequired,\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nconst mapStateToProps = ({\n  wallet: {\n    currencies\n  }\n}) => ({\n  currencies\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrencies: () => dispatch(getCurrenciesThunk())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddExpense);","map":{"version":3,"sources":["/home/usuario/Projects/Projetos/sd-013-b-project-trybewallet/src/components/AddExpense.js"],"names":["React","Component","connect","PropTypes","getCurrenciesThunk","AddExpense","constructor","state","selectedCurrency","handleChange","bind","componentDidMount","getCurrencies","props","target","value","setState","render","currencies","map","currency","propTypes","func","isRequired","arrayOf","string","mapStateToProps","wallet","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { getCurrenciesThunk } from '../actions';\n\nclass AddExpense extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      selectedCurrency: 'USD',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { getCurrencies } = this.props;\n    getCurrencies();\n  }\n\n  handleChange({ target: { value } }) {\n    this.setState({ selectedCurrency: value });\n  }\n\n  render() {\n    const { currencies = [] } = this.props;\n    const { selectedCurrency } = this.state;\n    return (\n      <form action=\"\">\n        <label htmlFor=\"value-input\">\n          Valor\n          <input type=\"text\" id=\"value-input\" />\n        </label>\n        <label htmlFor=\"description-input\">\n          Descrição\n          <input type=\"text\" id=\"description-input\" />\n        </label>\n        <label htmlFor=\"currency\">\n          Moeda\n          <select\n            name=\"currency\"\n            id=\"currency\"\n            value={ selectedCurrency }\n            onChange={ this.handleChange }\n          >\n            {currencies.map((currency) => (\n              <option key={ currency } value={ currency }>{currency}</option>\n            ))}\n          </select>\n        </label>\n        <label htmlFor=\"payment-method\">\n          Método de pagamento\n          <select name=\"paymentMethod\" id=\"payment-method\">\n            <option value=\"money\">Dinheiro</option>\n            <option value=\"credit-card\">Cartão de crédito</option>\n            <option value=\"debit-card\">Cartão de débito</option>\n          </select>\n        </label>\n        <label htmlFor=\"tag\">\n          Tag\n          <select name=\"tag\" id=\"tag\">\n            <option value=\"food\">Alimentação</option>\n            <option value=\"recreation\">Lazer</option>\n            <option value=\"work\">Trabalho</option>\n            <option value=\"transportation\">Transporte</option>\n            <option value=\"healthcare\">Saúde</option>\n          </select>\n        </label>\n      </form>\n    );\n  }\n}\n\nAddExpense.propTypes = {\n  getCurrencies: PropTypes.func.isRequired,\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nconst mapStateToProps = ({ wallet: { currencies } }) => ({\n  currencies,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrencies: () => dispatch(getCurrenciesThunk()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddExpense);\n"]},"metadata":{},"sourceType":"module"}