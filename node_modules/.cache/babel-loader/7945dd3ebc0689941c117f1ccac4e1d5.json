{"ast":null,"code":"var _jsxFileName = \"/home/henrique/Documentos/henrique/Projects/Projetos/sd-013-b-project-trybewallet/src/pages/Wallet.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport AddExpense from '../components/AddExpense';\nimport { fetchCurrencies, fetchExpenses } from '../actions/index';\nimport ExpenseTable from '../components/ExpenseTable';\n\nclass Wallet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: 0,\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: '',\n      tag: ''\n    };\n    this.handleState = this.handleState.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      fetchApi\n    } = this.props;\n    fetchApi();\n  }\n\n  handleState({\n    target\n  }) {\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleClick() {\n    const {\n      sendExpense\n    } = this.props;\n    sendExpense(this.state);\n    this.setState(({\n      id\n    }) => ({\n      id: id + 1\n    }));\n  }\n\n  reducerSoma(array) {\n    const expenses = array.map(expense => Number(expense.value) * Number(expense.exchangeRates[expense.currency].ask));\n    return expenses.reduce((acc, value) => acc + value, 0);\n  }\n\n  render() {\n    const {\n      userLogged,\n      currencies,\n      expenses\n    } = this.props;\n    const {\n      value,\n      description,\n      currency,\n      method,\n      tag\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      \"data-testid\": \"email-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"Usu\\xE1rio logado:\", ' ', userLogged), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, \"Despesa total:\", /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"total-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, this.reducerSoma(expenses))), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, \"C\\xE2mbio utlizado:\", ' ', /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"header-currency-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"BRL\")), /*#__PURE__*/React.createElement(AddExpense, {\n      currencies: currencies,\n      handleState: this.handleState,\n      valor: value,\n      desc: description,\n      moeda: currency,\n      pagamento: method,\n      categoria: tag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, \"Adicionar despesa\"), /*#__PURE__*/React.createElement(ExpenseTable, {\n      expenses: expenses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchApi: () => dispatch(fetchCurrencies()),\n  sendExpense: state => dispatch(fetchExpenses(state))\n});\n\nconst mapStateToProps = state => ({\n  userLogged: state.user.email,\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses\n});\n\nWallet.defaultProps = {\n  expenses: []\n};\nWallet.propTypes = {\n  userLogged: PropTypes.string.isRequired,\n  fetchApi: PropTypes.func.isRequired,\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n  sendExpense: PropTypes.func.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object)\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);","map":{"version":3,"sources":["/home/henrique/Documentos/henrique/Projects/Projetos/sd-013-b-project-trybewallet/src/pages/Wallet.jsx"],"names":["React","connect","PropTypes","AddExpense","fetchCurrencies","fetchExpenses","ExpenseTable","Wallet","Component","constructor","props","state","id","value","description","currency","method","tag","handleState","bind","handleClick","componentDidMount","fetchApi","target","name","setState","sendExpense","reducerSoma","array","expenses","map","expense","Number","exchangeRates","ask","reduce","acc","render","userLogged","currencies","mapDispatchToProps","dispatch","mapStateToProps","user","email","wallet","defaultProps","propTypes","string","isRequired","func","arrayOf","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport AddExpense from '../components/AddExpense';\nimport { fetchCurrencies, fetchExpenses } from '../actions/index';\nimport ExpenseTable from '../components/ExpenseTable';\n\nclass Wallet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: 0,\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: '',\n      tag: '',\n    };\n\n    this.handleState = this.handleState.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    const { fetchApi } = this.props;\n    fetchApi();\n  }\n\n  handleState({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  handleClick() {\n    const { sendExpense } = this.props;\n    sendExpense(this.state);\n    this.setState(({ id }) => ({\n      id: id + 1,\n    }));\n  }\n\n  reducerSoma(array) {\n    const expenses = array.map((expense) => Number(expense.value)\n      * Number(expense.exchangeRates[expense.currency].ask));\n    return expenses.reduce((acc, value) => acc + value, 0);\n  }\n\n  render() {\n    const { userLogged, currencies, expenses } = this.props;\n    const { value, description, currency, method, tag } = this.state;\n    return (\n      <div>\n        <h3 data-testid=\"email-field\">\n          Usuário logado:\n          {' '}\n          {userLogged}\n        </h3>\n        <h3>\n          Despesa total:\n          {/* { console.log(expenses.map((expense) => parseInt(expense.valor, 0))\n            .reduce((acc, value) => acc + value, 0)) } */}\n          <span data-testid=\"total-field\">{this.reducerSoma(expenses)}</span>\n        </h3>\n        <h3>\n          Câmbio utlizado:\n          {' '}\n          <span data-testid=\"header-currency-field\">BRL</span>\n        </h3>\n        <AddExpense\n          currencies={ currencies }\n          handleState={ this.handleState }\n          valor={ value }\n          desc={ description }\n          moeda={ currency }\n          pagamento={ method }\n          categoria={ tag }\n        />\n        <button\n          type=\"button\"\n          onClick={ this.handleClick }\n        >\n          Adicionar despesa\n        </button>\n        <ExpenseTable expenses={ expenses } />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchApi: () => dispatch(fetchCurrencies()),\n  sendExpense: (state) => dispatch(fetchExpenses(state)),\n});\n\nconst mapStateToProps = (state) => ({\n  userLogged: state.user.email,\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses,\n});\n\nWallet.defaultProps = {\n  expenses: [],\n};\n\nWallet.propTypes = {\n  userLogged: PropTypes.string.isRequired,\n  fetchApi: PropTypes.func.isRequired,\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n  sendExpense: PropTypes.func.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n"]},"metadata":{},"sourceType":"module"}