{"ast":null,"code":"var _jsxFileName = \"/home/henrique/Documentos/henrique/Projects/Projetos/sd-013-b-project-trybewallet/src/components/SelectInput.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SelectInput extends Component {\n  render() {\n    const {\n      label,\n      inputValue,\n      optionsArray,\n      handleChange\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: inputValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }\n    }, label, /*#__PURE__*/React.createElement(\"select\", {\n      name: inputValue,\n      id: inputValue,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }, optionsArray.map(option => /*#__PURE__*/React.createElement(\"option\", {\n      key: option,\n      value: option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, option))));\n  }\n\n}\n\nSelectInput.propTypes = {\n  label: PropTypes.string.isRequired,\n  inputValue: PropTypes.string.isRequired,\n  optionsArray: PropTypes.arrayOf(PropTypes.string).isRequired,\n  handleChange: PropTypes.func.isRequired\n};\nexport default SelectInput;","map":{"version":3,"sources":["/home/henrique/Documentos/henrique/Projects/Projetos/sd-013-b-project-trybewallet/src/components/SelectInput.js"],"names":["React","Component","PropTypes","SelectInput","render","label","inputValue","optionsArray","handleChange","props","map","option","propTypes","string","isRequired","arrayOf","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAClCG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,UAAT;AAAqBC,MAAAA,YAArB;AAAmCC,MAAAA;AAAnC,QAAoD,KAAKC,KAA/D;AACA,wBACE;AAAO,MAAA,OAAO,EAAGH,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACID,KADJ,eAEE;AACE,MAAA,IAAI,EAAGC,UADT;AAEE,MAAA,EAAE,EAAGA,UAFP;AAGE,MAAA,QAAQ,EAAGE,YAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKID,YAAY,CAACG,GAAb,CAAkBC,MAAD,iBACjB;AAAQ,MAAA,GAAG,EAAGA,MAAd;AAAuB,MAAA,KAAK,EAAGA,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0CA,MAA1C,CADA,CALJ,CAFF,CADF;AAcD;;AAjBiC;;AAoBpCR,WAAW,CAACS,SAAZ,GAAwB;AACtBP,EAAAA,KAAK,EAAEH,SAAS,CAACW,MAAV,CAAiBC,UADF;AAEtBR,EAAAA,UAAU,EAAEJ,SAAS,CAACW,MAAV,CAAiBC,UAFP;AAGtBP,EAAAA,YAAY,EAAEL,SAAS,CAACa,OAAV,CAAkBb,SAAS,CAACW,MAA5B,EAAoCC,UAH5B;AAItBN,EAAAA,YAAY,EAAEN,SAAS,CAACc,IAAV,CAAeF;AAJP,CAAxB;AAOA,eAAeX,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SelectInput extends Component {\n  render() {\n    const { label, inputValue, optionsArray, handleChange } = this.props;\n    return (\n      <label htmlFor={ inputValue }>\n        { label }\n        <select\n          name={ inputValue }\n          id={ inputValue }\n          onChange={ handleChange }\n        >\n          { optionsArray.map((option) => (\n            <option key={ option } value={ option }>{ option }</option>\n          ))}\n        </select>\n      </label>\n    );\n  }\n}\n\nSelectInput.propTypes = {\n  label: PropTypes.string.isRequired,\n  inputValue: PropTypes.string.isRequired,\n  optionsArray: PropTypes.arrayOf(PropTypes.string).isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default SelectInput;\n"]},"metadata":{},"sourceType":"module"}