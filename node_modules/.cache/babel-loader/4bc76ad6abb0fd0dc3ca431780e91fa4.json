{"ast":null,"code":"var _jsxFileName = \"/home/usuario/Projects/Projetos/sd-013-b-project-trybewallet/src/pages/Wallet.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport AddExpense from '../components/AddExpense';\n\nclass Wallet extends React.Component {\n  render() {\n    const {\n      email,\n      expenses\n    } = this.props;\n    const convertedValue = expenses.map(expense => expense.value * expense.exChangeRates[expense.currency].ask);\n    console.log(convertedValue);\n    const total = 0;\n\n    if (convertedValue.length === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"header\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        \"data-testid\": \"email-field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }\n      }, email), /*#__PURE__*/React.createElement(\"p\", {\n        \"data-testid\": \"total-field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      }, \"0\", ' ', /*#__PURE__*/React.createElement(\"span\", {\n        \"data-testid\": \"header-currency-field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }\n      }, \"BRL\"), ' ')), /*#__PURE__*/React.createElement(AddExpense, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }));\n    }\n  }\n\n}\n\nWallet.propTypes = {\n  email: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = ({\n  user: {\n    email\n  }\n}) => ({\n  email\n});\n\nexport default connect(mapStateToProps, null)(Wallet);","map":{"version":3,"sources":["/home/usuario/Projects/Projetos/sd-013-b-project-trybewallet/src/pages/Wallet.js"],"names":["React","connect","PropTypes","AddExpense","Wallet","Component","render","email","expenses","props","convertedValue","map","expense","value","exChangeRates","currency","ask","console","log","total","length","propTypes","string","isRequired","mapStateToProps","user"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;AACnCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsB,KAAKC,KAAjC;AACA,UAAMC,cAAc,GAAGF,QAAQ,CAACG,GAAT,CACpBC,OAAD,IAAaA,OAAO,CAACC,KAAR,GAAgBD,OAAO,CAACE,aAAR,CAAsBF,OAAO,CAACG,QAA9B,EAAwCC,GADhD,CAAvB;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,cAAZ;AACA,UAAMS,KAAK,GAAG,CAAd;;AACA,QAAIT,cAAc,CAACU,MAAf,KAA0B,CAA9B,EAAiC;AAC/B,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,uBAAY,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+Bb,KAA/B,CADF,eAEE;AAAG,uBAAY,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEG,GAFH,eAGE;AAAM,uBAAY,uBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,EAIG,GAJH,CAFF,CADF,eAUE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CADF;AAcD;AACF;;AAxBkC;;AA2BrCH,MAAM,CAACiB,SAAP,GAAmB;AACjBd,EAAAA,KAAK,EAAEL,SAAS,CAACoB,MAAV,CAAiBC;AADP,CAAnB;;AAIA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAElB,IAAAA;AAAF;AAAR,CAAD,MAA0B;AAAEA,EAAAA;AAAF,CAA1B,CAAxB;;AAEA,eAAeN,OAAO,CAACuB,eAAD,EAAkB,IAAlB,CAAP,CAA+BpB,MAA/B,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport AddExpense from '../components/AddExpense';\n\nclass Wallet extends React.Component {\n  render() {\n    const { email, expenses } = this.props;\n    const convertedValue = expenses.map(\n      (expense) => expense.value * expense.exChangeRates[expense.currency].ask,\n    );\n    console.log(convertedValue);\n    const total = 0;\n    if (convertedValue.length === 0) {\n      return (\n        <div>\n          <header>\n            <p data-testid=\"email-field\">{ email }</p>\n            <p data-testid=\"total-field\">\n              0\n              {' '}\n              <span data-testid=\"header-currency-field\">BRL</span>\n              {' '}\n            </p>\n          </header>\n          <AddExpense />\n        </div>\n      );\n    }\n  }\n}\n\nWallet.propTypes = {\n  email: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = ({ user: { email } }) => ({ email });\n\nexport default connect(mapStateToProps, null)(Wallet);\n"]},"metadata":{},"sourceType":"module"}